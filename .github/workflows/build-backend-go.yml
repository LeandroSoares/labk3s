name: Build Backend Go

on:
  push:
    branches: [ main ]
    paths:
      - 'src/backend-go/**'
      - '.github/workflows/build-backend-go.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'src/backend-go/**'
  # Permite execu√ß√£o manual do workflow
  workflow_dispatch:
  # Permite ser chamado por outros workflows
  workflow_call:

# Permiss√µes necess√°rias para upload de resultados SARIF
permissions:
  contents: read
  security-events: write

env:
  VERSION: ${{ github.sha }}

jobs:
  build:
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24'
          cache: true
          cache-dependency-path: ./src/backend-go/go.mod

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and push Backend Go
        uses: docker/build-push-action@v4
        with:
          context: ./src/backend-go
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/joke-backend-go:${{ env.VERSION }},${{ secrets.DOCKERHUB_USERNAME }}/joke-backend-go:latest
          cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/joke-backend-go:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/joke-backend-go:buildcache,mode=max
          
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ secrets.DOCKERHUB_USERNAME }}/joke-backend-go:${{ env.VERSION }}
          format: 'sarif'
          output: 'trivy-results.sarif'
          exit-code: '0'  # N√£o falha a pipeline, apenas reporta
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'

      # Gerar relat√≥rio para o GitHub Summary
      - name: Generate Trivy Summary Report
        if: always()
        run: |
          echo "## üîí Trivy Security Scan - Backend Go Image" >> $GITHUB_STEP_SUMMARY
          echo "Security vulnerabilities found in ${{ secrets.DOCKERHUB_USERNAME }}/joke-backend-go:${{ env.VERSION }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          # Executar novamente o Trivy em formato de tabela para o summary
          trivy image --no-progress --ignore-unfixed --severity HIGH,CRITICAL ${{ secrets.DOCKERHUB_USERNAME }}/joke-backend-go:${{ env.VERSION }} | tee trivy-report.txt
          
          if [ -s trivy-report.txt ]; then
            echo "### Vulnerabilidades Encontradas:" >> $GITHUB_STEP_SUMMARY
            echo '```' >> $GITHUB_STEP_SUMMARY
            cat trivy-report.txt >> $GITHUB_STEP_SUMMARY
            echo '```' >> $GITHUB_STEP_SUMMARY
          else
            echo "### ‚úÖ Nenhuma vulnerabilidade cr√≠tica encontrada!" >> $GITHUB_STEP_SUMMARY
          fi

      # Upload do relat√≥rio SARIF para o GitHub Security
      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'
