apiVersion: v1
kind: ConfigMap
metadata:
  name: alertmanager-config
  namespace: observability
data:
  alertmanager.yml: |
    global:
      # Configuração global para resolução de alertas
      resolve_timeout: 5m
      
    # A árvore de roteamento
    route:
      # Estratégia de agrupamento padrão
      group_by: ['alertname', 'cluster', 'service']
      
      # Quando o primeiro alerta no grupo foi disparado
      group_wait: 30s
      
      # Frequência de envio de notificação para o mesmo grupo
      group_interval: 5m
      
      # Frequência de reenvio para alertas não resolvidos
      repeat_interval: 4h
      
      # Receptor padrão para alertas não roteados
      receiver: 'webhook-receiver'
      
      # Roteamento específico baseado em labels
      routes:
      - match:
          severity: critical
        receiver: 'webhook-receiver'
        group_wait: 10s
      
      - match:
          application: 'joke-app'
        receiver: 'webhook-receiver'

    # Definição dos receivers - usando um receptor null por enquanto
    # Posteriormente pode ser configurado para Slack, Email, etc.
    receivers:
    - name: 'webhook-receiver'
      webhook_configs:
      - url: 'http://localhost:8080/dummy-webhook'  # URL fictícia
        send_resolved: true

    # Silenciamento (mute) de alertas em determinadas condições
    inhibit_rules:
    - source_match:
        severity: 'critical'
      target_match:
        severity: 'warning'
      # Se cluster for igual, inibir alertas de warning quando houver critical
      equal: ['cluster', 'service']
    
    - source_match:
        alertname: 'NodeDown'
      target_match_re:
        alertname: '.*'
      # Inibir todos os alertas relacionados a um nó quando ele estiver indisponível
      equal: ['node']
