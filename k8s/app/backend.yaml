apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  namespace: joke-app
  labels:
    app: backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/metrics" 
        prometheus.io/port: "3000"
    spec:
      containers:
      - name: backend
        image: ${DOCKER_USERNAME}/joke-backend:${VERSION}
        ports:
        - containerPort: 3000
        env:
        - name: NODE_ENV
          value: "production"
        - name: OTEL_EXPORTER_OTLP_ENDPOINT
          value: "http://grafana-agent.observability.svc.cluster.local:4318/v1/traces"
        - name: OTEL_SERVICE_NAME
          value: "joke-backend"
        - name: OTEL_TRACES_SAMPLER
          value: "parentbased_traceidratio"
        - name: OTEL_TRACES_SAMPLER_ARG
          value: "1.0"
        - name: DISABLE_TRACING
          value: "false"  # Habilitando o tracing no código
        readinessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 3
        livenessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 15
          periodSeconds: 20
          timeoutSeconds: 3
        resources:
          limits:
            cpu: "0.3"
            memory: "256Mi"
          requests:
            cpu: "0.1"
            memory: "128Mi"
        securityContext:
          readOnlyRootFilesystem: false  # Mantido false porque precisa escrever no SQLite
          runAsNonRoot: true
          runAsUser: 1000
          # Removidas restrições de segurança temporariamente
          # allowPrivilegeEscalation: false
        volumeMounts:
        - name: sqlite-data
          mountPath: /data
      volumes:
      - name: sqlite-data
        emptyDir: {}  # Usar emptyDir temporariamente em vez de PVC para testar
---
apiVersion: v1
kind: Service
metadata:
  name: backend-service
  namespace: joke-app
spec:
  selector:
    app: backend
  ports:
  - port: 3000
    targetPort: 3000
  type: ClusterIP
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: sqlite-pvc
  namespace: joke-app
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
