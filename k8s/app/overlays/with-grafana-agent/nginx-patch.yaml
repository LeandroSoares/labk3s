apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  namespace: joke-app
spec:
  template:
    spec:
      containers:
      - name: frontend
        volumeMounts:
        - name: nginx-conf
          mountPath: /etc/nginx/conf.d/default.conf
          subPath: nginx.conf
          readOnly: true
      volumes:
      - name: nginx-conf
        configMap:
          name: frontend-nginx-conf
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: frontend-nginx-conf
  namespace: joke-app
data:
  nginx.conf: |
    server {
        listen 80;
        server_name _;

        root /usr/share/nginx/html;
        index index.html;

        # Configuração para o frontend
        location / {
            try_files $uri $uri/ /index.html;
        }

        # Proxy para o backend
        location /api/ {
            proxy_pass http://backend-service.joke-app.svc.cluster.local:3000/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            
            # Preservar cabeçalhos de tracing
            proxy_pass_header X-Trace-ID;
        }
        
        # Endpoint para telemetria frontend
        location /telemetry {
            # Redireciona para o serviço Grafana Agent
            proxy_pass http://grafana-agent.observability.svc.cluster.local:4318/v1/traces;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header Content-Type "application/json";
        }
    }
