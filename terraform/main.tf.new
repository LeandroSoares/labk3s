terraform {
  required_providers {
    kubernetes = {
      source  = "hashicorp/kubernetes"
      version = ">=2.0.0"
    }
    helm = {
      source  = "hashicorp/helm"
      version = ">=2.0.0"
    }
  }
}

# Configurar o provider Kubernetes
provider "kubernetes" {
  config_path = var.kube_config_path
}

# Configurar o provider Helm - correção da sintaxe
provider "helm" {
  kubernetes = {
    config_path = var.kube_config_path
  }
}

# Módulo de observabilidade com Prometheus e Grafana
module "observability" {
  source = "./modules/observability"
  
  namespace                = var.namespace
  prometheus_stack_version = var.prometheus_stack_version
  grafana_enabled          = var.grafana_enabled
  grafana_service_type     = var.grafana_service_type
  expose_grafana           = var.expose_grafana
  grafana_nodeport         = var.grafana_nodeport
  optimize_resources       = var.optimize_resources
  
  # Valores personalizados para o Prometheus Stack
  prometheus_stack_values = {
    "grafana.adminPassword" = var.grafana_admin_password
  }
}

# Configurar Ingress para os serviços de observabilidade
resource "kubernetes_ingress_v1" "observability_ingress" {
  count = var.create_ingress ? 1 : 0
  
  metadata {
    name      = "observability-ingress"
    namespace = var.namespace
    annotations = {
      "kubernetes.io/ingress.class" = "traefik"
      "cert-manager.io/cluster-issuer" = "letsencrypt-prod"
    }
  }

  spec {
    rule {
      host = "grafana.labk3s.online"
      http {
        path {
          path      = "/"
          path_type = "Prefix"
          backend {
            service {
              name = "prom-stack-grafana"
              port {
                number = 80
              }
            }
          }
        }
      }
    }

    rule {
      host = "prometheus.labk3s.online"
      http {
        path {
          path      = "/"
          path_type = "Prefix"
          backend {
            service {
              name = "prom-stack-kube-prometheus-prometheus"
              port {
                number = 9090
              }
            }
          }
        }
      }
    }

    tls {
      hosts = ["grafana.labk3s.online", "prometheus.labk3s.online"]
      secret_name = "observability-tls"
    }
  }
}
